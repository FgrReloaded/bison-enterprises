generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id        String    @id @default(cuid())
  name      String
  email     String    @unique
  password  String
  phone     String?
  userType  UserTypes @default(CUSTOMER)
  state     String?
  city      String?
  address   String?
  pincode   String?
  cart      Cart?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Admin {
  id        String    @id @default(cuid())
  name      String
  email     String    @unique
  password  String
  phone     String?
  userType  UserTypes @default(ADMIN)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Product {
  id          String     @id @default(cuid())
  name        String
  description String
  price       Float
  category    String?
  images      String[]
  stock       Int
  isFeatured  Boolean?
  isHide      Boolean?   @default(false)
  variants    Json[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  CartItem    CartItem[]
}

model Cart {
  id         String     @id @default(cuid())
  customer   Customer   @relation(fields: [customerId], references: [id])
  customerId String     @unique
  items      CartItem[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model CartItem {
  id        String   @id @default(cuid())
  cart      Cart     @relation(fields: [cartId], references: [id])
  cartId    String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  variant   Json? // To store the selected variant
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([cartId, productId, variant])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum UserTypes {
  ADMIN
  CUSTOMER
}
